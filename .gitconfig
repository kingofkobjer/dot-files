[color]
	ui = auto
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[color "status"]
  added = yellow
  changed = red
  untracked = cyan
[alias]
  br = branch
  ci = commit
  cm = commit -m
  cma = commit -a -m
  ca = commit --amend
  cae = commit --amend --no-edit
  amend = commit --amend
  caa = commit -a --amend -C HEAD
  filelog = log -u
  fl = log -u
  ai = add --interactive
  co = checkout
  cl = clean -xdf
  cp = cherry-pick 
  bra = branch -ra
  #list commands
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
  ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  #list all aliases
  la = "!git config -l | grep alias | cut -c 7-"
  dw = diff --word-diff
  dc = diff --cached
  df = diff
  dt = difftool
  lg = log -p
  lol = log --graph --decorate --pretty=oneline --abbrev-commit
  lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
  lsf = ls-files
  l5d = log -n5- --oneline --decorate
  l10d = log -n10- --oneline --decorate
  mln = merge --log --no-rerere-autoupdate
  mt = mergetool
  #list modified files in last commit
  dl = "!git ll -1"
  #diff last commit
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
  branch = branch -ra
  #reset commands
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  rh = reset --hard
  rs = reset --soft
  show-graph = log --graph --abbrev-commit --pretty=format:\"%h %s %cn %ci\"
  st = status
  un = diff --name-only --diff-filter=U
  # Show files ignored by git:
  ign = ls-files -o -i --exclude-standard
  #git svn
  svnr = svn rebase
  svnd = svn dcommit
  svnl = svn log --oneline --show-commit
  #stash
  sl = stash list
  sa = stash apply
  ss = stash save
  grep = grep -Ii
  gr = grep -Ii
  #grep from root folder
  gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"
  #grep on filename
  f = "!git ls-files | grep -i"
  #rename branch tree to done-
  done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"
  #assume aliases
  assume = update-index --assume-unchanged
  unassume = update-index --no-assume-unchanged
  #show assumed files
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  #unassume all the assumed files
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0
  #merges
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
[core]
    whitespace = trailing-space,space-before-tab,tab-in-indent
    editor = vim

[include]
    path = .local/.gitconfig
